#!/bin/bash -e
# Copyright (c) 2011 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
# Render a text file into a bitmap. Files named '*.txt' are small font, those
# named '*.TXT' are large font.
#
# Options:
#
#    --lan=LANGUAGE     Render language (locale) settings
#    --font=FONTNAME    Use specified font (instead of Droid Sans)
#
font="Droid Sans"
language=""
point=15

while true ; do
  case "$1" in
    --lan=* | --language=*)
      language="--language ${1##*=}"
      shift
      ;;
    --font=*)
      # Allows empty string = default font.
      param="${1##*=}"
      [ -n "$param" ] && font="$param"
      shift
      ;;
    --point=*)
      point="${1##*=}"
      shift
      ;;
    *)
      break
      ;;
  esac
done


# Image parameters
# - New pango-view has --pixel to assign font size in pixel, but that is not
#   supported by old (ex, 1.24.5 in chroot) so we must assign --dpi 72 for
#   pointsize.
# TODO(hungte) Replace font color & size settings to pango --markup.
bg="#ffffff"
small_color="#000000"
small_font="$font"
small_pointsize="$point"
large_color="#585858"
large_font="$font"
large_pointsize="$((point * 8 / 3))"

for txtfile in $*; do
  # pango-view does not support assigning output format options for bitmap, so
  # we must create images in PNG format and then post-process it (ex, convert
  # into BMP by ImageMagick).

  pngfile="${txtfile%.*}".png
  case "$txtfile" in
    *.txt)
      pango-view -q $language \
        --background "$bg" --foreground "$small_color" \
        --font "$small_font $small_pointsize" --dpi 72 \
        --margin=3 --align=center \
        --output "$pngfile" \
        "$txtfile"
      echo "wrote $pngfile"
      ;;
    *.TXT)
      pango-view -q $language \
        --background "$bg" --foreground "$large_color" \
        --font "$large_font $large_pointsize" --dpi 72 \
        --margin=10 --align=center \
        --output "$pngfile" \
        "$txtfile"
      echo "wrote $pngfile"
      ;;
    *)
      echo "Ignoring $txtfile. Filename should end with .txt or .TXT"
      ;;
  esac
done
